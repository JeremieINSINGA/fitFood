{"version":3,"sources":["webpack:///./src/app/recipes/single-recipe/single-recipe.module.ts","webpack:///./src/app/recipes/single-recipe/single-recipe.page.html","webpack:///./src/app/recipes/single-recipe/single-recipe.page.scss","webpack:///./src/app/recipes/single-recipe/single-recipe.page.ts"],"names":[],"mappings":"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","file":"recipes-single-recipe-single-recipe-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SingleRecipePage } from './single-recipe.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SingleRecipePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SingleRecipePage]\n})\nexport class SingleRecipePageModule {}\n","module.exports = \"<!-- <ion-text *ngIf=\\\"!loading\\\">\\n  <h1>Chargement...</h1>\\n</ion-text> -->\\n\\n<ion-header *ngIf=\\\"recipe\\\">\\n  <ion-toolbar color=\\\"favorite\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\"></ion-back-button>\\n      <ion-button *ngIf=\\\"recipe\\\" (click)=\\\"onBackToRecipe()\\\">\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ recipe.title }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"recipe\\\">\\n  <ion-item *ngIf=\\\"recipe.portions\\\" class=\\\"ion-padding-end\\\" lines=\\\"none\\\">\\n    <ion-icon name=\\\"pie\\\" slot=\\\"start\\\"></ion-icon>\\n    <p>{{ recipe.portions }} portion(s)</p>\\n  </ion-item>\\n  <ion-item *ngIf=\\\"recipe.prepareTime\\\" class=\\\"ion-padding-end\\\" lines=\\\"none\\\">\\n    <ion-icon name=\\\"time\\\" slot=\\\"start\\\"></ion-icon>\\n    <p>{{ recipe.prepareTime | date : 'HH:mm' }} de préparation</p>\\n  </ion-item>\\n  <ion-item *ngIf=\\\"recipe.globalTime\\\" class=\\\"ion-padding-end\\\" lines=\\\"none\\\">\\n    <ion-icon name=\\\"timer\\\" slot=\\\"start\\\"></ion-icon>\\n    <p>{{ recipe.globalTime | date : 'HH:mm' }} au total</p>\\n  </ion-item>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title color=\\\"favorite\\\" class=\\\"fs-20\\\">Ingédients</ion-card-title>\\n    </ion-card-header>\\n  \\n    <ion-card-content class=\\\"ion-no-padding\\\">\\n      <ion-item color=\\\"light\\\" class=\\\"ion-padding\\\" lines=\\\"none\\\" *ngFor=\\\"let ingredient of recipe.ingredients\\\">\\n        {{ ingredient.name }} <span *ngIf=\\\"ingredient.quantity\\\">- {{ ingredient.quantity}}</span> <span *ngIf=\\\"ingredient.unit !== 'aucun'\\\">{{ ingredient.unit }}</span>\\n      </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title color=\\\"favorite\\\" class=\\\"fs-20\\\">Etapes</ion-card-title>\\n    </ion-card-header>\\n  \\n    <ion-card-content class=\\\"ion-no-padding ion-padding-bottom\\\">\\n      <ion-item color=\\\"light\\\" class=\\\"ion-padding\\\" lines=\\\"none\\\" *ngFor=\\\"let step of recipe.steps\\\">\\n        {{ step }}\\n      </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"6\\\">\\n        <ion-button color=\\\"tertiary\\\" expand=\\\"block\\\" (click)=\\\"onEditRecipe()\\\">Modifier</ion-button>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\">\\n        <ion-button color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"presentAlertConfirm()\\\">Supprimer</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvc2luZ2xlLXJlY2lwZS9zaW5nbGUtcmVjaXBlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Recipe } from 'src/app/models/Recipe.model';\nimport { Subscription } from 'rxjs';\nimport { RecipesService } from 'src/app/services/recipes.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/models/User.model';\nimport { UsersService } from 'src/app/services/users.service';\nimport * as firebase from 'firebase';\nimport { NavController, AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-single-recipe',\n  templateUrl: './single-recipe.page.html',\n  styleUrls: ['./single-recipe.page.scss'],\n})\nexport class SingleRecipePage implements OnInit, OnDestroy {\n\n  recipe: Recipe;\n\n  user: User;\n  userSubscription: Subscription;\n\n  constructor(\n    private recipesService: RecipesService,\n    private usersService: UsersService,\n    private route: ActivatedRoute,\n    private navCtrl: NavController,\n    private alertCtrl: AlertController\n    ) {}\n\n  ngOnInit() {\n    firebase.auth().onAuthStateChanged(\n      (user) => {\n        if (user) {\n          this.initUser(user.uid);\n          this.initRecipe(user.uid);\n        } else {\n          console.log('déconnecté');\n        }\n      }\n    );\n  }\n\n  initUser(userId) {\n    this.userSubscription = this.usersService.userSuject.subscribe(\n      (user: User) => {\n        this.user = user;\n      }\n    );\n    this.usersService.getUser(userId);\n    this.usersService.emitUser();\n  }\n\n  initRecipe(userId) {\n    const recipeId = this.route.snapshot.params['id'];\n    this.recipesService.getSingleRecipe(userId, recipeId).then(\n      (data: Recipe) => {\n        this.recipe = data;\n      }\n    );\n  }\n\n  onRemoveRecipe() {\n    const recipeId = this.route.snapshot.params['id'];\n    this.recipesService.removeRecipe(recipeId, this.user.userId);\n    // this.router.navigate(['/recipes']);\n  }\n\n  onEditRecipe() {\n    const recipeId = this.route.snapshot.params['id'];\n    this.navCtrl.navigateForward('/recipes/edit/' + recipeId);\n  }\n\n  onBackToRecipe() {\n    const id = this.route.snapshot.params['id'];\n    this.navCtrl.navigateBack('/recipes');\n  }\n\n  async presentAlertConfirm() {\n    const id = this.route.snapshot.params['id'];\n    const alert = await this.alertCtrl.create({\n      header: 'Supprimer cette recette ?',\n      buttons: [\n        {\n          text: 'Annuler',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Supprimer',\n          handler: () => {\n            this.recipesService.removeRecipe(id, this.user.userId);\n            this.navCtrl.navigateForward('/recipes');\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  ngOnDestroy() {\n    this.userSubscription.unsubscribe();\n  }\n}\n"],"sourceRoot":""}